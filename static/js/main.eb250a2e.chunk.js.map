{"version":3,"sources":["images/portfolio logo.png","Projectpage.js","Frontpage.js","partials/Header.js","authentication/Register.js","authentication/Login.js","Contactpage.js","Pricing.js","App.js","index.js"],"names":["module","exports","cardContent","Projectpage","selectedId","setSelectedId","useState","title","setTitle","subtitle","setSubtitle","itemClass","setItemClass","content","setContent","stillPresent","width","setWidth","window","innerWidth","height","setHeight","innerHeight","updateDimensions","useEffect","addEventListener","removeEventListener","React","createElement","className","id","onClick","e","target","document","getElementById","Grid","areas","name","start","end","columns","rows","gap","map","item","Box","gridArea","motion","div","layoutId","class","text","setAttribute","console","log","src","AnimatePresence","key","initial","opacity","animate","transition","delay","exit","p","Markup","ageUnrounded","Date","age","Math","round","colorRed","colorOrange","colorYellow","colorBlack","Frontpage","hasMore","setHasMore","loaded","setLoaded","pageAt","items","push","anime","timeline","loop","add","targets","translateX","translateZ","easing","duration","el","i","stagger","grid","from","axis","translateY","rotateZ","InfiniteScroll","pageStart","loadMore","loader","idd","animation","type","Keyboard","size","color","Header","state","setState","FaUserAlt","Link","to","FaHome","style","marginRight","marginBottom","FaRaspberryPi","contactPage","htmlFor","placeholder","required","cols","href","FaLinkedinIn","FaInstagram","FaFacebookF","cardArray","setSelected","valueProp","transform","resetSelected","Pricing","_selected","_setSelected","MdOutlineArrowBackIosNew","margin","ul","li","h4","MdEuro","price1","price2","MdOutlineArrowForwardIos","App","Router","Routes","Route","path","exact","element","Register","Login","Contact","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.eb250a2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio logo.2b82f673.png\";","\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Box, Grid} from 'grommet';\r\nimport \"./Projectpage.css\";\r\nimport {AnimatePresence, motion} from \"framer-motion\";\r\nimport {Markup} from \"interweave\";\r\nimport { Github } from 'grommet-icons';\r\nimport {VscGithub} from \"react-icons/vsc\";\r\n\r\nconst cardCoursetimer = {\r\n    \"id\": \"cardCoursetimer\",\r\n    \"class\": \"projCard\",\r\n    \"title\": \"CourseTimer\",\r\n    \"subtitle\": \"A timer app made entirely to my linking\",\r\n    \"text\": `<p><br/>CourseTimer is an app with an essential simple goal, making it possible to track the time I spend for any specific course.  \r\n    <br/><br/> Although it is still deep in production, it is already possible to make an account and start timing.<br/>  \r\n    Later on, I'd also like to add features such as: graphs on which users can see how much they've studied per day, week, month, etc.\r\n    <br/><br/><b>Technologies used:</b>  \r\n    <br/> CourseTimer is made in <b>Native Android</b> with <b>Java</b> for the BE and good old <b>XML</b> for the layout  \r\n    (I promise I’ll remake it in Kotlin Compose one day 😉).  \r\n    <br/>Furthermore, I use Firebase as a means to store user data in the cloud. This also includes login data.  \r\n    There is a possibility that I will move this to a SQL database though, as they seem better for more complex data.  \r\n    <br/><br/> <b>Download the CourseTimer apk from my GitHub page and try it for yourself.</b> <br/>  \r\n    <a href='https://github.com/Theirry/Course-Timer-apk/releases' target='_blank'>CourseTimer</a>  \r\n    </p>`\r\n\r\n};//<a href='https://github.com/Theirry/CoursTimer/releases' target='_blank'>CourseTimer</a>\r\nconst cardUltimata = {\r\n    \"id\": \"cardUltimata\",\r\n    \"class\": \"projCard\",\r\n    \"title\": \"Discord bot: Ultimata\",\r\n    \"subtitle\": \"My ultimate Discord bot\",\r\n    \"text\": `<p><br/><b>What is Ultimata?</b>\r\n    <br/><br/>Utimatly it is a conjoined version of all the Discord bots I had made till now.\r\n    <br/>Ultimata thereby has numerous different functions, and almost all of them have one sing goal; making my day just that little bit better.\r\n    <br/><br/> I started making this bot during the Covid pandemic. As you may know, this was a very lonely time for a lot of people. Me being a software developer student / hermit at the time… I was thriving! I was practically stuck at home for most days, and thus I did as any like me would. Make a discord channel with my friends and inserting a very irritating, jet funny and quirky bot in it. \r\n    <br/><br/> - In need of a joke or a funny GIF? Ultimata has got you!\r\n    <br/> - Are the server members using vulgar language? Let Ultimata handle them by giving them a taste of their own medicine!\r\n    <br/> - Just bored and in need of some randomness? Ask Ultimata to tell you random (factless) facts generated using <b>GPT2</b> based on the YouTube scripts of the YouTuber VSauce!\r\n    <br/><br/><b>Technologies used:</b>\r\n    <br/>Ultimata is made in <b>Java</b> and hosted on my own server at home, using <b>docker</b>.\r\n    <br/>So don’t be alarmed if it seems down at the moment, since at times I shut the server down.\r\n    <br/><br/> Why don’t you try it out for yourself in the Discord embedded window and see! (You may need to log in to Discord to do so)</p>`\r\n};\r\nconst cardContent = [cardCoursetimer, cardUltimata];\r\n\r\nfunction Projectpage(){\r\n\r\n    const [selectedId, setSelectedId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [subtitle, setSubtitle] = useState(\"\");\r\n    const [itemClass, setItemClass] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    let stillPresent = false;\r\n\r\n    //Window resizing\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [height, setHeight] = useState(window.innerHeight);\r\n    const updateDimensions = () => {\r\n        setWidth(window.innerWidth);\r\n        setHeight(window.innerHeight);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n        return () => window.removeEventListener(\"resize\", updateDimensions);\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <div className={\"projectpage\"}>\r\n\r\n            <div id={'outer_container'}\r\n                 onClick={(e) => {\r\n                     if(e.target !== document.getElementById(selectedId+\"hovered\")\r\n                         && e.target !== document.getElementById(selectedId+\"hoveredTitle\")\r\n                         && e.target !== document.getElementById(selectedId+\"hoveredContent\")\r\n                         && stillPresent){\r\n                         stillPresent = false\r\n                         setSelectedId(null)\r\n                     }\r\n\r\n                 }}>\r\n\r\n                <Grid className={\"gromGrid\"}\r\n                    areas={[\r\n                    {name: 'cardCoursetimer', start: [0, 0], end: [0, 0]},\r\n                    {name: 'cardUltimata', start:[1, 0], end: [2,0]},\r\n                    {name: 'empty1', start: [0, 1], end: [0, 1]},\r\n                    {name: 'empty2', start: [1, 1], end: [2, 1]}\r\n                    ]}\r\n                    columns={['flex', 'flex', 'flex']}\r\n                    rows={['flex', 'medium']}\r\n                    gap='medium'\r\n                    >\r\n\r\n                    {cardContent.map(item => (\r\n                        \r\n                        <Box gridArea={item.id}>\r\n                            <motion.div  id={item.id} layoutId={item.id+\"layout\"} className={\"card-body card \" + item.class}\r\n                                         onClick={() => {\r\n                                             setTitle(item.title);\r\n                                             setContent(item.text);\r\n                                             setItemClass(item.class);\r\n                                             setSubtitle(item.subtitle);\r\n                                             document.getElementById(item.id).setAttribute(\"animate\", \"{{opacity: 0}}\")\r\n                                             setSelectedId(item.id);\r\n                                         }}\r\n                            >\r\n                                <motion.div className=\"card-title\">{item.title}</motion.div>\r\n                                {/* <motion.div id={item.id + `_backim`} /> */}\r\n                                {item.id === 'cardCoursetimer' && (\r\n                                    <div id='coursePic'>{console.log(`itemid is= ${item.id}`)}</div>\r\n                                )}\r\n                                {item.id === 'cardUltimata' && (\r\n                                   <iframe src=\"https://e.widgetbot.io/channels/963175225032339540/963175225569189982\" height=\"600\" width=\"100%\"></iframe>\r\n                                )}\r\n                            </motion.div>\r\n                        </Box>\r\n                    ))}\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n            <AnimatePresence>\r\n                {/*{const isPresent = useIsPresent()}*/}\r\n                {selectedId && (\r\n                    <motion.div  id={selectedId+\"hovered\"} layoutId={selectedId+\"layout\"} className={\"card-body card hoveredCard\"}\r\n                                 key={selectedId}\r\n                                 initial={{ opacity: 0}}\r\n                                 animate={{ opacity: 1, height: 'fit-content'}}\r\n                                 transition={{delay: 0.25}}\r\n                                 exit={{ opacity: 0, height: '100%'}}\r\n                    >\r\n                        <motion.div id={selectedId+\"hoveredTitle\"} className=\"card-title\">{subtitle}</motion.div>\r\n                        <motion.p id={selectedId+\"hoveredContent\"} className=\"card-text\"><Markup className={'content_markup'} content={content}/></motion.p>\r\n                        {stillPresent = true}\r\n                        {/*<motion.button onClick={() => setSelectedId(null)} >Close</motion.button>*/}\r\n                    </motion.div>\r\n\r\n                )}\r\n            </AnimatePresence>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Projectpage;","\r\nimport React, {useState, Component, useEffect} from 'react';\r\nimport {useIsPresent, AnimatePresence, motion} from 'framer-motion';\r\nimport \"./Frontpage.css\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport Projectpage from \"./Projectpage\";\r\nimport anime from 'animejs/lib/anime.es.js';\r\nimport {Markup} from \"interweave\";\r\nimport {Box, Grid} from \"grommet\";\r\nimport {Cube, Keyboard} from 'grommet-icons'\r\n\r\nconst currentDate = new Date();\r\nconst birthDate = new Date('November 11, 1999')\r\nconst ageInMilliseconds = currentDate - birthDate;\r\nconst ageUnrounded = ageInMilliseconds / (1000 * 60 * 60 * 24 * 365)\r\nconst age = Math.round(ageUnrounded)\r\nconst timesLived  = age - 7\r\n\r\nconst card1 = {\r\n    \"id\": \"card1\",\r\n    \"class\": \"whoIAm\",\r\n    \"title\": \"About Me\",\r\n    \"subtitle\": \"Who Am I?\",\r\n    \"text\": `<p></br>I'm a <b>${age}-year-old junior software developer</b> with <b>two years of experience</b> in software development.</br>\r\nAlthough originally I am from Togo (West-Africa) I have lived in Belgium for ${timesLived} years now and am fluent in Dutch, English and French.</br></br>\r\nI have hands-on experience in <b>Android development</b> as well as <b>frontend Web development using React</b>. All in all, I am very passionate about both <b>front-end and back-end engineering</b>, and I’m always eager to expand my skills and take on new challenges to build efficient, user-friendly applications.</br></br>\r\nNow beyond coding, I also enjoy <b>photography, cycling, gaming, and watching series</b>—I’m always looking for new ways to stay creative and inspired.</br></br>\r\nFeel free to explore my work, and let’s connect!</p>`,\r\n    \"gap\":\"small\"\r\n};\r\nconst card2 = {\r\n    \"id\": \"card2\",\r\n    \"title\": \"About This Portfolio\",\r\n    \"class\": \"whatIsThis\",\r\n    \"text\": `<p></br>At first, I started making this portfolio by simply using HTML, CSS and JavaScript. \r\n    But after learning about <b>React</b> in school, I decided that would be way more interesting for this project. \r\n    So I built it with <b>React</b>, written in <b>JavaScript</b>.\r\n    </br> It incorporates some libraries, including <a href=\"https://animejs.com/documentation/\" target=\"_blank\">Anime.js</a> for animations.\r\n    </br></br> I originally created this portfolio as a way to experiment with new <b>JavaScript libraries</b> and I am planning on expanding and improving it as I continue to grow as a developer.\r\n    </br></br> On the <b>Projects</b> page, I keep track of <b>relevant personal projects</b> that I’ve worked on, showcasing my progress and experience in SD.\r\n    </br></br> Feel free to explore, and thanks for stopping by! 🚀</p>`,\r\n    \"gap\": \"none\"\r\n};\r\nconst cardContent = [card1, card2];\r\n\r\nlet colorRed = \"rgba(168, 50, 80, 0.75)\";\r\nlet colorOrange = \"rgba(168, 105, 50, 0.85)\";\r\nlet colorYellow = \"rgba(168, 153, 50, 0.90)\";\r\nlet colorBlack = \"rgba(0, 0, 0, 0.20)\"\r\n\r\n\r\n\r\nfunction getAge(dateString) {\r\n    let today = new Date();\r\n    let birthDate = new Date(dateString);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    let m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\n\r\n\r\n\r\nfunction Frontpage(){\r\n\r\n    const [selectedId, setSelectedId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [itemClass, setItemClass] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    let stillPresent = false;\r\n    //&& e.target !== document.getElementById(\"card1\")\r\n    //                     && e.target !== document.getElementById(\"card2\")\r\n\r\n    //Window resizing\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [height, setHeight] = useState(window.innerHeight);\r\n    const updateDimensions = () => {\r\n        setWidth(window.innerWidth);\r\n        setHeight(window.innerHeight);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n        return () => window.removeEventListener(\"resize\", updateDimensions);\r\n    }, []);\r\n\r\n    //Infinite scroll\r\n    let pageAt = 0;\r\n    let items = [];\r\n    // items.push(Frontpage);\r\n    items.push(Projectpage);\r\n    function loadFunc(){\r\n        pageAt += 1;\r\n        if (pageAt === 1)\r\n            setHasMore(false);\r\n        console.log(hasMore)\r\n    }\r\n\r\n    /**\r\n     * THIERRY KLOUGBO animation\r\n     */\r\n    anime.timeline({loop: true})\r\n        .add({\r\n            targets: '.ml12 .letter',\r\n            translateX: [40, 0],\r\n            translateZ: 0,\r\n            opacity: [0, 1],\r\n            easing: \"easeInExpo\",\r\n            duration: 500,\r\n            delay: (el, i) => 1000 + 30 * i\r\n        }).add({\r\n        targets: '.ml12 .letter',\r\n        translateX: [0, -30],\r\n        opacity: [1, 0],\r\n        easing: \"easeOutExpo\",\r\n        duration: 1000,\r\n        delay: (el, i) => 10000 + 30 * i\r\n    });\r\n\r\n    anime({\r\n        targets: '.expCube',\r\n        translateX: anime.stagger(-10, {grid: [5, 3], from: 'center', axis: 'x'}),\r\n        translateY: anime.stagger(15, {grid: [5, 3], from: 'center', axis: 'y'}),\r\n        rotateZ: anime.stagger([0, 90], {grid: [5, 3], from: 'center', axis: 'x'}),\r\n        delay: anime.stagger(200, {grid: [5, 3], from: 'center'}),\r\n        easing: 'easeInOutQuad'\r\n    });\r\n\r\n    return(\r\n        <div className=\"frontPage\">\r\n\r\n            <InfiniteScroll\r\n                pageStart={0}\r\n                loadMore={loadFunc}\r\n                hasMore={hasMore}\r\n                loader={<div className={\"loader\"} key={0}>Loading ...</div>}\r\n            >\r\n                {items}\r\n            </InfiniteScroll>\r\n\r\n            <div id={'outer_container'} className=\"grid-container1\"\r\n            onClick={(e) => {\r\n                if(e.target !== document.getElementById(selectedId+\"hovered\")\r\n                    && e.target !== document.getElementById(selectedId+\"hoveredTitle\")\r\n                    && e.target !== document.getElementById(selectedId+\"hoveredContent\")\r\n                    && stillPresent){\r\n                    stillPresent = false\r\n                    setSelectedId(null)\r\n                }\r\n\r\n            }}>\r\n\r\n                <Grid className={\"gromGrid\"}\r\n                      areas={[\r\n                          {name: 'myname', start: [0, 0], end: [0, 0]},\r\n                          {name: 'picMe', start: [2, 0], end: [2, 0]},\r\n                          {name: 'card1', start:[0, 1], end: [1, 1]},\r\n                          {name: 'card2', start: [2, 1], end: [2, 1]},\r\n                          {name: 'experties', start:[0, 2], end: [2, 2]}\r\n                      ]}\r\n                      columns={['flex', 'small', 'flex']}\r\n                      rows={['medium', 'small', 'medium']}\r\n                      gap={\"medium\"}\r\n                >\r\n\r\n                    {cardContent.map(item => (\r\n                        <Box key={item.id} gridArea={item.id}>\r\n                            <motion.div\r\n                                id={item.id}\r\n                                layoutId={item.id + \"layout\"}\r\n                                className={`card-body card ${item.class}`} \r\n                                onClick={() => {\r\n                                    setTitle(item.title);\r\n                                    setContent(item.text);\r\n                                    setItemClass(item.class);\r\n                                    setSelectedId(item.id);\r\n                                }}\r\n                                animate={{ opacity: 1 }}\r\n                            >\r\n                                <motion.div className=\"card-title\">{item.title}</motion.div>\r\n                            </motion.div>\r\n                        </Box>\r\n                    ))}\r\n                    <Box gridArea={'myname'} gap={\"small\"}>\r\n                        <h6 className={\"introduction\"}>Hello, I am</h6>\r\n                        <h1 className={\"ml12\"}>\r\n                            <div className={\"name_background\"}>\r\n                                <span className='letter'>T</span>\r\n                                <span className='letter'>H</span>\r\n                                <span className='letter'>I</span>\r\n                                <span className='letter'>E</span>\r\n                                <span className='letter'>R</span>\r\n                                <span className='letter'>R</span>\r\n                                <span className='letter'>Y</span>\r\n                                <span className='letter'> </span>\r\n                                <span className='letter'>K</span>\r\n                                <span className='letter'>L</span>\r\n                                <span className='letter'>O</span>\r\n                                <span className='letter'>U</span>\r\n                                <span className='letter'>G</span>\r\n                                <span className='letter'>B</span>\r\n                                <span className='letter'>O</span>\r\n                            </div>\r\n                        </h1>\r\n                    </Box>\r\n                    <Box gridArea={'picMe'} className={\"pictureMe\"} idd={\"picMegrid\"} animation={{type: \"fadeIn\", duration: 4000}} gap={\"none\"}/>\r\n                    {/* <Box gridArea={'picMe'} className={\"pictureMe\"} gap={\"none\"}></Box> */}\r\n                    <Box gridArea={'experties'} className={\"card-body card\"} id={\"expertiesCard\"}>\r\n                        <p className=\"card-title\">My experties?</p>\r\n                        <div className={\"skillDiv\"}>\r\n                            <p className={\"expTilte\"}>Java:</p>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorRed}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorOrange}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorYellow}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorBlack}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorBlack}/>\r\n                        </div>\r\n                        <div className={\"skillDiv\"}>\r\n                            <p className={\"expTilte\"}>JS: </p>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorRed}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorOrange}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorYellow}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorBlack}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorBlack}/>\r\n                        </div>\r\n                        <div className={\"skillDiv\"}>\r\n                            <p className={\"expTilte\"}>HTML && CSS: </p>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorRed}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorOrange}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorYellow}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorBlack}/>\r\n                            <Keyboard className={\"expCube\"} size={\"large\"} color={colorBlack}/>\r\n                        </div>\r\n\r\n\r\n                    </Box>\r\n\r\n                </Grid>\r\n\r\n                {/*animate={{x: [0,100,0]}} transition={{ease: \"easeOut\", duration:1}}*/}\r\n                <AnimatePresence>\r\n                    {/*{const isPresent = useIsPresent()}*/}\r\n                    {selectedId && (\r\n                        <motion.div  id={selectedId+\"hovered\"} layoutId={selectedId+\"layout\"} className={\"card-body card hoveredCard\"}\r\n                                     key={selectedId}\r\n                                     initial={{ opacity: 0}}\r\n                                     animate={{ opacity: 1, height: 'fit-content'}}\r\n                                     transition={{delay: 0.25}}\r\n                                     exit={{ opacity: 0, height: '100%'}}\r\n                        >\r\n                            <motion.div id={selectedId+\"hoveredTitle\"} className=\"card-title\">{title}</motion.div>\r\n                            <motion.p id={selectedId+\"hoveredContent\"} className=\"card-text\"><Markup className={'content_markup'} content={content}/></motion.p>\r\n                            {stillPresent = true}\r\n                            {/*<motion.button onClick={() => setSelectedId(null)} >Close</motion.button>*/}\r\n                        </motion.div>\r\n\r\n                    )}\r\n                </AnimatePresence>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Frontpage;","\r\nimport \"./Header.css\";\r\nimport logoimg from '../images/portfolio logo.png';\r\nimport React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {FaHome, FaRaspberryPi, FaUserAlt } from \"react-icons/fa\";\r\nimport {MdContactPage, MdOutlinePriceCheck} from \"react-icons/md\"\r\n\r\n\r\nexport default function Header(){\r\n    const [state, setState] = useState(0);\r\n    return(\r\n        <div className=\"headdiv\">\r\n            <nav className=\"navibar\">\r\n                {/*<figure className=\"navlogo\">\r\n                    <img className=\"navlogoimage\" src={logoimg} alt=\"Conpanny logo\"/>\r\n                </figure>*/}\r\n                {/*<h1 className=\"pageTitle\" style={{color: \"white\"}}>Portfolio</h1>*/}\r\n\r\n\r\n                <div className={\"nameNavItem\"}>\r\n                    <FaUserAlt id={\"nameNavIcon\"} /><div id={\"nameNavText\"}>Thierry Klougbo</div>\r\n                </div>\r\n              \r\n                <ul className=\"linkbar\">\r\n    \r\n                    <li className={\"navitem\"} id={\"homeNavItem\"}>\r\n                        <Link className={\"navlink\"} id={\"homeLink\"} to=\"/\"> <FaHome style={{marginRight: '10px', marginBottom: '5'}}/> Home</Link>\r\n                    </li>\r\n                    <li className={\"navitem\"} id={\"projectsNavItem\"}>\r\n                        <Link className={\"navlink\"} id={\"projectsLink\"} to=\"/projects\"> <FaRaspberryPi style={{marginRight: '10px', marginBottom: '5'}}/> Projects</Link>\r\n                    </li>\r\n                    {/*<li className={\"navitem\"}>*/}\r\n                    {/*    <Link className={\"navlink\"} to={\"/pricing\"}><MdOutlinePriceCheck style={{marginRight: '10px', marginBottom: '5'}}/>Pricing</Link>*/}\r\n                    {/*</li>*/}\r\n                    {/* <li className={\"navitem\"}>\r\n                        <Link className={\"navlink\"} to=\"/contactMe\"><MdContactPage style={{marginRight: '10px', marginBottom: '5'}}/>Contact Me</Link>\r\n                    </li> */}\r\n                    {/*<li className={\"navitem\"}>\r\n                        <Link className={\"navLink\"} to=\"/register\">Register</Link>\r\n                    </li>\r\n                    <li className={\"navitem\"}>\r\n                        <Link className={\"navLink\"} to=\"/login\">Login</Link>\r\n                    </li>*/}\r\n                </ul>\r\n            </nav>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport Header from \"../partials/Header\";\r\n\r\nimport React from 'react';\r\n\r\nexport default function (){\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport Header from \"../partials/Header\";\r\n\r\nimport React from 'react';\r\n\r\nexport default function (){\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","\r\nimport React from 'react';\r\nimport \"./Contactpage.css\";\r\nimport {FaInstagram, FaFacebookF, FaLinkedinIn} from \"react-icons/fa\";\r\n\r\nexport default function contactPage(){\r\n    return(\r\n        <div className={\"contactPage\"}>\r\n\r\n            <div id={'container'}>\r\n                <p className={\"title\"}>\r\n                    Let Us Create Something <br/>\r\n                    Greate Thogether\r\n                </p>\r\n\r\n                <div id={'contactForm'}>\r\n                    <form>\r\n                        <div className=\"form-row nameAndEmail\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputName\">Name</label>\r\n                                <input type={\"text\"} className={\"form-control\"} id={\"inputName\"} placeholder={\"Name\"} required/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" required/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row nameAndEmail\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPhone\">Phone</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"inputPhone\" required/>\r\n                            </div>\r\n                            {/*<div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPrice\">Price Range</label>\r\n                                <select id=\"inputPrice\" className=\"form-control\" required>\r\n                                    <option selected>Choose...</option>\r\n                                    <option>Range 1</option>\r\n                                    <option>Range 2</option>\r\n                                    <option>Range 3</option>\r\n                                </select>\r\n                            </div>*/}\r\n                        </div>\r\n\r\n                        <div className=\"form-row nameAndEmail projectdiv\">\r\n                            <div className=\"form-group col-md-6\" style={{width: \"100%\"}}>\r\n                                <label htmlFor=\"inputProject\">The Project</label>\r\n                                <textarea cols=\"50\" rows=\"10\" className=\"form-control\" id=\"inputProject\" placeholder={\"A Short Description Of what you'd like us to work on.\"} required/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Contact me</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className={\"socials\"}>\r\n                    <p className={\"orparagraf\"}>\r\n                        <h1>Or</h1>\r\n                        +32 48 78 22 98 | thierryklougbo@gmail.com\r\n                    </p>\r\n\r\n                    <div className={\"socialIcons\"}>\r\n                        <a href=\"https://www.linkedin.com/in/thierry-klougbo-880b071b1/\" target={\"_blank\"}><FaLinkedinIn className={\"icon\"}/></a>\r\n                        <a href=\"https://www.instagram.com/thigorro/\" target=\"_blank\"><FaInstagram className={\"icon\"}/></a>\r\n                        <a href=\"https://www.facebook.com/profile.php?id=100008328725064\" target={\"_blank\"}><FaFacebookF className={\"icon\"}/></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nimport React, {useRef, useState} from 'react';\r\nimport {MdOutlineArrowBackIosNew, MdOutlineArrowForwardIos, MdEuro} from \"react-icons/md\"\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport \"./Pricing.css\"\r\n\r\n// Freelance front-end dev: https://sanderlangendoen.nl/tarieven-freelance-frontend-ontwikkelaar/\r\n//https://www.nationaleberoepengids.nl/android-developer#:~:text=Een%20Android%20Developer%20kan%20rekenen,van%20zijn%20leeftijd%20en%20ervaring.\r\n\r\nlet priceR1 = {\r\n    \"id\": \"pr1\",\r\n    \"title\": \"Web front-end\",\r\n    \"price1\": 40,\r\n    \"price2\": 60,\r\n    \"selected\": false\r\n}\r\nlet priceR2 = {\r\n    \"id\": \"pr2\",\r\n    \"title\": \"Web back-end\",\r\n    \"price1\": 0,\r\n    \"price2\": 0,\r\n    \"selected\": true\r\n}\r\nlet priceR3 = {\r\n    \"id\": \"pr3\",\r\n    \"title\": \"Android application backend\",\r\n    \"price1\": 17,\r\n    \"price2\": 25,\r\n    \"selected\": false\r\n}\r\n\r\nconst cardArray = [priceR1, priceR2, priceR3];\r\n\r\n\r\nconst setSelected = (valueProp) => {\r\n    const el = document.getElementById(`pr${valueProp}`)\r\n    el.style.transform = \"scale(1.05, 1.05)\"\r\n\r\n  /*  el.setAttribute( \"text-shadow\", \"0 0 3px #FF0000\")\r\n    el.setAttribute( \"animate\", \"scale: 1.05\")\r\n    el.setAttribute( \"transition\", \"duration: 2\")*/\r\n\r\n}\r\n\r\nconst resetSelected = () => {\r\n    document.getElementById(`pr1`).style.transform = \"scale(1, 1)\"\r\n    document.getElementById(`pr2`).style.transform = \"scale(1, 1)\"\r\n    document.getElementById(`pr3`).style.transform = \"scale(1, 1)\"\r\n}\r\n\r\nfunction Pricing(){\r\n    const [_selected, _setSelected] = useState(1)\r\n\r\n    return(\r\n        <div className={\"pricing\"}>\r\n            <div className={\"grid-container2\"}>\r\n                <div className={\"arrowLeft\"} onClick={() => {\r\n                    // var pri = document.getElementById(\"pricelist\");\r\n                    // if (_selected === 2) {\r\n                    //     pri.setAttribute(\"margin\", \"0 5em 0 0\")\r\n                    //     pri.setAttribute( \"overflow\", \"hidden\")\r\n                    // }\r\n                    console.log(`pr${_selected}`)\r\n                    if (_selected === 1) {\r\n                        resetSelected()\r\n                        setSelected(_selected)\r\n                    }\r\n                    else if (_selected === 2 || _selected === 3 ) {\r\n                        resetSelected()\r\n                        _setSelected(_selected - 1)\r\n                        setSelected(_selected)\r\n                    }\r\n                }}>\r\n                    <MdOutlineArrowBackIosNew size={70} className={\"arrBack\"}/>\r\n                </div>\r\n\r\n                <div id=\"prices\" className={\"prices\"}>\r\n                    <h1 style={{margin: \"0.5em 0 1.25em 0\"}}>Standard Pricing</h1>\r\n                    <p></p>\r\n\r\n                    <motion.ul\r\n                        id=\"pricelist\" className={\"grid-container3\"} style={{height:\"80%\"}}\r\n                    >\r\n                        {\r\n                            cardArray.map(item =>\r\n                            <motion.li id={item.id} key={item.id} class={\"listitem\"}>\r\n                                <motion.div className={\"pricerange\"} id={\"pricerange\"+item.id}>\r\n                                    <motion.div className={\"class-title ct\"}>{item.title}</motion.div>\r\n                                    <motion.h4 className={\"h4cards\"}>{<MdEuro/>}{item.price1} - {<MdEuro/>}{item.price2}/ hour</motion.h4>\r\n                                </motion.div>\r\n                            </motion.li>\r\n                        )\r\n                        }\r\n                    </motion.ul>\r\n                </div>\r\n\r\n                <div className={\"arrowRight\"} onClick={() => {\r\n                    if (_selected === 3 ){\r\n                        resetSelected()\r\n                        setSelected(_selected)\r\n                    }\r\n                    else if (_selected === 1 || _selected === 2){\r\n                        _setSelected(_selected + 1)\r\n                        resetSelected()\r\n                        setSelected(_selected)\r\n                    }\r\n                }}>\r\n                    <MdOutlineArrowForwardIos size={70} className={\"arrNext\"}/>\r\n                </div>\r\n            </div>\r\n\r\n           {/* <AnimatePresence>\r\n                {_selected && (\r\n                    cardArray.map(item => (\r\n                        <motion.li\r\n                            id={item.id}\r\n                            class={\"listitem\"}\r\n\r\n                            key={item.id}\r\n                            initial={{scale: 1}}\r\n                            animate={{scale: 1.05}}\r\n                            transition={{duration: 0.5}}\r\n                            exit={{scale: 1}}\r\n                        >\r\n                            <motion.div className={\"pricerange\"} id={\"pricerange\"+item.id}>\r\n                                <motion.div className={\"class-title ct\"}>{item.title}</motion.div>\r\n                                <motion.h4 className={\"h4cards\"}>{<MdEuro/>}{item.price1} - {<MdEuro/>}{item.price2}/ hour</motion.h4>\r\n                            </motion.div>\r\n                        </motion.li>\r\n                        )\r\n                    ))}\r\n            </AnimatePresence>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Pricing","\r\nimport React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Frontpage from \"./Frontpage\";\r\nimport Projectpage from \"./Projectpage\";\r\nimport Header from \"./partials/Header\";\r\nimport Register from \"./authentication/Register\";\r\nimport Login from \"./authentication/Login\";\r\nimport Contact from \"./Contactpage\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <div className=\"App\">\r\n            <Header />\r\n            <Routes>\r\n                <Route path=\"/\" exact element={<Frontpage/>} />\r\n                <Route path=\"/projects\" element={<Projectpage/>} />\r\n                <Route path={\"/register\"} element={<Register />} />\r\n                <Route path={\"/login\"} element={<Login />} />\r\n                <Route path={\"/contactMe\"} element={<Contact />} />\r\n                <Route path={\"/pricing\"} element={<Pricing />}/>\r\n            </Routes>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport \"bulma/css/bulma.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './index.css';\r\nimport App from './App'\r\n// //2.or  add this to index.js:\r\n// <link\r\n// rel=\"stylesheet\"\r\n// href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\r\n// integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\r\n// crossorigin=\"anonymous\"\r\n//     />\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n "],"sourceRoot":""}